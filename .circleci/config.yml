orbs:
  cli: circleci/circleci-cli@0.1.7
  hello-world: sample-orbs/hello-world@<< pipeline.parameters.dev-orb-version >>

version: 2.1

parameters:
  dev-orb-version:
    default: 'dev:alpha'
    type: string
  run-integration-tests:
    type: boolean
    default: false

jobs:
  validation:
    executor: cli/default
    steps:
      - cli/install
      - checkout
      - run:
          name: バリデーション
          command: circleci orb validate ./src/orb.yml

  dev-promote-prod:
    parameters:
      release:
        type: enum
        enum: [patch, minor, major]
        default: patch
        description: circleci orb publish promoteコマンドの引数
    executor: cli/default
    steps:
      - cli/install
      - checkout
      - run:
          name: dev:${CIRCLE_SHA1:0:7}を本番用Orbsへプロモートする
          command: circleci orb publish promote sample-orbs/hello-world@dev:${CIRCLE_SHA1:0:7} << parameters.release >> --token ${CIRCLE_TOKEN}

  integration-test-for-orb:
    executor: hello-world/default
    steps:
      - hello-world/echo-command

  publish-dev-orb:
    executor: cli/default
    steps:
      - checkout
      - run:
          name: devバージョンを公開
          command: |
            circleci orb publish src/orb.yml sample-orbs/hello-world@dev:alpha --token ${CIRCLE_TOKEN}
            circleci orb publish src/orb.yml sample-orbs/hello-world@dev:${CIRCLE_SHA1:0:7} --token ${CIRCLE_TOKEN}
  trigger-integration-test-workflow:
    executor: cli/default
    steps:
      - run:
          name: integration-testワークフローをトリガーする
          command: |
            VCS_TYPE=$(echo ${CIRCLE_BUILD_URL} | cut -d '/' -f 4)

            curl -u ${CIRCLE_TOKEN}: -X POST --header "Content-Type: application/json" -d "{
              \"branch\": \"${CIRCLE_BRANCH}\",
              \"parameters\": {\"run-integration-tests\": true, \"dev-orb-version\":\"dev:${CIRCLE_SHA1:0:7}\"}
            }" "https://circleci.com/api/v2/project/${VCS_TYPE}/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}/pipeline"

workflows:
  integration-test:
    when: << pipeline.parameters.run-integration-tests >>
    jobs:
      - integration-test-for-orb
  publish-dev:
    unless: << pipeline.parameters.run-integration-tests >>
    jobs:
      - validation
      - publish-dev-orb:
          requires:
            - validation
      - trigger-integration-test-workflow:
          requires:
            - publish-dev-orb
  promote-orb:
    unless: << pipeline.parameters.run-integration-tests >>
    jobs:
      - dev-promote-prod:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /patch.*/
          release: patch
      - dev-promote-prod:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /minor.*/
          release: minor
      - dev-promote-prod:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /major.*/
          release: major
